@model PechinchaMarket.Models.Produto

@{
    ViewData["Title"] = "Edit";
    IEnumerable<Loja> lojas = ViewData["Lojas"] as IEnumerable<Loja>;
}
<link href="~/css/produto.css" rel="stylesheet" />

<a class="img-back" asp-action="Index"></a>
<h2>Editar Produto</h2>

<body class="gradiante2-secondary-color background-height">
    <div>
        <form asp-action="Edit" enctype="multipart/form-data"  class="form">
            <input type="hidden" name="produtoId" value="@Model.Id" />
            <div class="addProduct">
            <div class="addProductLeft">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div style="display:none" id="produtoId">
                    @Html.DisplayFor(model => model.Id)
                </div>
                <div class="form-group">
                        <input type="text" name="name" style="display: none" value="@Model.Name" />
                        @Html.DisplayFor(model => model.Name)
                </div>
                <div class="form-group">
                        <input type="text" name="brand" style="display: none" value="@Model.Brand" />
                        @Html.DisplayFor(model => model.Brand)
                </div>
                <div class="form-group">
                    <label>Categoria: </label>
                    @Html.DisplayFor(model => model.ProdCategoria)
                </div>
                <hr />
                    <div class="precoUnidade form-group">
                        <div class="preco">
                            <input class="form-control" id="price" onchange="changePrice()" placeholder="€" value="" min="0.1" max="999">
                        </div>
                         €/ 
                        <div class="unidade">
                            @Html.DisplayFor(model => model.Unidade)
                        </div>
                    </div>
                    <div>
                        <input type="checkbox" id="discounts" onchange="hasDiscount(this)" />
                        <label for="discounts">Aplicar desconto</label>
                    </div>
                    <div id="descontos" class="desconto form-group">
                       <div class="">
                            <label for="valor">Valor: </label>
                            <input class="form-control custom-input" id="valor" onchange="changeDiscount()" min="0" max="100" placeholder="%"/>
                        </div> 
                        <!--<div class="duracao">
                            <label for="daterange">Selecione o intervalo de datas:</label>
                            <input type="text" id="data" onclick="openDiscountDuration(); clickedInput(this);" onchange="changeData()" value="" />
                        </div>-->
                        
                    </div>     
                    <div class="form-group">
                        <input type="checkbox" id="shops" onchange="hasShops(this)" />
                        <label for="shops">Personalizar desconto por loja</label>
                    </div>
            </div>
            <div class="addProductRight">
                <div class="form-group">
                        <label>Imagem: </label>
                        <img id="image_preview" src="@Url.Action("Show", "Produtos", new { id = @Model.Id})" alt="your image" width="250px" height="250px" class="imagePlaceholder" />
                        <div class="uploadImage">
                            <label asp-for ="@Model.Image" class="custom-file-upload">Adicionar Foto</label>
                            <input type="file" asp-for="@Model.Image" class="image" name="file" onchange="readfile(this)" />
                            <span asp-validation-for="@Model.Image" class="text-danger"></span>
                        </div>
                </div>
            </div>
            </div>
            <div class="bottom">
                <div id="lojas">
                    <table class="shopTable">
                        <thead>
                            <tr>
                                <th>
                                    Morada
                                </th>
                                <th>
                                    Preço
                                </th>
                                <th>
                                    Desconto
                                </th>
                                <th>
                                    Duração 
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (Model.ProdutoLojas != null)
                            {
                                @foreach (var pl in Model.ProdutoLojas)
                                {
                                    <tr>
                                        <td>
                                            @Html.DisplayFor(modelItem => pl.Loja.Address)
                                        </td>
                                        <td>
                                            <input type="number" id="priceInput" name="price" class="prices custom-input" value="@pl.Price" min="0.1" max="999" /> €
                                        </td>
                                        <td>
                                            <input type="number" name="discount" class="discount custom-input" value="@pl.Discount" min="0" max="999" /> %
                                        </td>
                                        <td>
                                            <input type="text" id="duration" name="duration" onclick="openDiscountDuration(); clickedInput(this);" value="@pl.StartDiscount - @pl.EndDiscount" />
                                        </td>
                                    </tr>
                                }
                            }
                        </tbody>
                    </table>
                </div>

                <div class="new-page display-none" id="data-select">
                    <div class="big-page column-container center-x-flex center-y-flex shrink-flex edges-flex">
                        <div class="edges-flex max-width">
                            <div class="title unselectable-text">Selecionar duração do desconto</div>
                            <div class="cross-button" onclick="openDiscountDuration()"></div>
                        </div>
                        <div class="wrap-flex small-gap center-x-flex small-padding-right small-padding-left calendar-chooser row-container" id="calendar">

                        </div>
                        <div class="row-container right-flex max-width">
                            <div class="pechincha-button main-button-color row-container" id="salvarButton" onclick="">Salvar</div>
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <input name="id" type="hidden" asp-for="@Model.Id, " />
                    <input type="submit" value="Guardar Alterações" class="blue-button" />
                </div>
            </div>
        </form>
        </div>
</body>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script type="text/javascript" src="https://cdn.jsdelivr.net/jquery/latest/jquery.min.js"></script>
    <script type="text/javascript" src="https://cdn.jsdelivr.net/momentjs/latest/moment.min.js"></script>
    <script type="text/javascript" src="https://cdn.jsdelivr.net/npm/daterangepicker/daterangepicker.min.js"></script>
    <link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/daterangepicker/daterangepicker.css" />

    <script>
        function readfile(input) {
            if (input.files && input.files[0]) {
                var reader = new FileReader();

                reader.onload = function (e) {
                    $('#image_preview').attr('src', e.target.result);
                }

                reader.readAsDataURL(input.files[0]);
            }
        }

        function hasShops(input) {
            var x = document.getElementById("lojas")
            if (input.checked == true) {
                x.style.display = "block"
            } else {
                x.style.display = "none"
            }
        }

        function hasDiscount(input) {
            var x = document.getElementById("descontos")
            if (input.checked == true) {
                x.style.display = "block"
            } else {
                x.style.display = "none"
            }
        }

        function changePrice() {
            var p = document.getElementById("price");
            var ps = document.getElementsByClassName("prices")

            for (let item of ps) {
                    item.value = p.value
            }
        }

        function changeDiscount() {
            var v = document.getElementById("valor");
            var d = document.getElementsByClassName("discount")

            for (let item of d) {
                item.value = v.value
            }
        }

        function changeData() {
            var v = document.getElementById("data");
            var d = document.getElementsById("duration")

            for (let item of d) {
                item.value = v.value
            }
        }

        function openDiscountDuration() {
            document.body.classList.toggle('no-overflow');
            data = document.getElementById("data-select");
            data.classList.toggle('display-none');
        }

        function closeDiscountDuration() {
            document.body.classList.toggle('no-overflow');
            data = document.getElementById("data-select");
            data.classList.add('display-none');
        }

        document.addEventListener('DOMContentLoaded', function () {

            var currentDate = new Date();

            var monthNames = ["Janeiro", "Fevereiro", "Março", "Abril", "Maio", "Junho",
                "Julho", "Agosto", "Setembro", "Outubro", "Novembro", "Dezembro"];

            // Get the div element to contain the calendar
            var calendarDiv = document.getElementById("calendar");
            calendarDiv.innerHTML = ''; // Clear existing content

            for (var l = currentDate.getMonth(); l < 12; l++) {

                var monthName = monthNames[l];

                // Get the number of days in the specified month
                var daysInMonth = new Date(currentDate.getFullYear(), l+1, 0).getDate();

                // Get the first day of the specified month (0 = domingo, 1 = segunda, ..., 6 = sabado)
                var firstDayOfMonth = new Date(currentDate.getFullYear(), l, 1).getDay();
                var firstDayName = ["Dom","Seg", "Ter", "Qua", "Qui", "Sex", "Sab", ][firstDayOfMonth];

                // Create div elements for the month name
                var monthDiv = document.createElement("div");
                monthDiv.classList.add("month");
                var monthNameSpan = document.createElement("div");
                monthNameSpan.classList.add("month-name");
                monthNameSpan.classList.add("unselectable-text");
                monthNameSpan.textContent = monthName;
                monthDiv.appendChild(monthNameSpan);
                calendarDiv.appendChild(monthDiv);

                // Create div elements for each day of the specified month
                for (var i = 1; i <= daysInMonth; i++) {
                    var dayDiv = document.createElement("span");
                    dayDiv.classList.add("day");
                    dayDiv.classList.add("unselectable-text");
                    dayDiv.textContent = i;
                    monthDiv.appendChild(dayDiv);
                }
            }
        });

        var calendarDiv = document.getElementById('calendar');
        var isMouseDown = false;
        var startDay = null;
        var lastSelectedMonth = null;
        

        calendarDiv.addEventListener('mousedown', function (event) {
            if (event.target.classList.contains('day') && !isMouseDown) {
                
                calendarDiv.querySelectorAll('.day-selected').forEach(toggleSelection);
                calendarDiv.querySelectorAll('.day-selected-master').forEach(toggleMasterSelection);
                isMouseDown = true;
                startDay = event.target;
                lastSelectedMonth = event.target.parentNode.querySelector('.month-name').textContent;
                addMasterSelection(event.target);
            }
        });

        calendarDiv.addEventListener('mousemove', function (event) {
            if (isMouseDown && event.target.classList.contains('day')) {
                var endDay = event.target;
                var days = Array.from(calendarDiv.querySelectorAll('.day'));
                var startIndex = days.indexOf(startDay);
                var endIndex = days.indexOf(endDay);

                var minIndex = Math.min(startIndex, endIndex);
                var maxIndex = Math.max(startIndex, endIndex);

                if (startIndex < endIndex) {
                    for (var i = minIndex; i <= maxIndex; i++) {
                        addSelection(days[i]);
                        if (days[i].classList.contains('day-selected-master') && days[i] !== startDay) {
                            days[i].classList.remove('day-selected-master');
                        }
                    }
                } else {
                    for (var i = minIndex; i >= maxIndex; i--) {
                        addSelection(days[i]);
                        if (days[i].classList.contains('day-selected-master') && days[i] !== startDay) {
                            days[i].classList.remove('day-selected-master');
                        }
                    }
                }

                addMasterSelection(event.target);
            }
        });        

        document.addEventListener('mouseup', function () {
            isMouseDown = false;
        });

        function toggleSelection(dayElement) {
            dayElement.classList.toggle('day-selected');
        }

        function toggleMasterSelection(dayElement) {
            dayElement.classList.toggle('day-selected-master');
        }

        function addSelection(dayElement) {
            if (!dayElement.classList.contains('day-selected')) {
                dayElement.classList.add('day-selected');
            }
        }

        function addMasterSelection(dayElement) {
            if (!dayElement.classList.contains('day-selected-master')) {
                dayElement.classList.add('day-selected-master');
            }
        }

        let dataInput = null;

        function clickedInput(input){
            dataInput = input;
        }

        document.getElementById('salvarButton').addEventListener('click', function () {
            var selectedSpans = document.querySelectorAll('.day-selected-master');
            var startDateElement = selectedSpans[0];
            var endDateElement = selectedSpans[1];
            var startDay = startDateElement.textContent;
            var startMonth = getMonthFromCalendar(startDateElement);
            var endDay = endDateElement.textContent;
            var endMonth = getMonthFromCalendar(endDateElement);
            var currentYear = new Date().getFullYear(); 
            saveDate(startDay, startMonth, endDay, endMonth, currentYear);
        });

        function getMonthFromCalendar(dateElement) {
            return dateElement.parentNode.querySelector('.month-name').textContent;
        }

        function saveDate(startDay, startMonth, endDay, endMonth, currentYear) {
            var startDateFormatted = `${startDay}/${getMonthNumber(startMonth)}/${currentYear}`;
            var endDateFormatted = `${endDay}/${getMonthNumber(endMonth)}/${currentYear}`;
                       
            dataInput.value = `${startDateFormatted} - ${endDateFormatted}`;

            closeDiscountDuration();
        }

        function getMonthNumber(monthName) {
            var monthNames = ["Janeiro", "Fevereiro", "Março", "Abril", "Maio", "Junho",
                "Julho", "Agosto", "Setembro", "Outubro", "Novembro", "Dezembro"];
            return monthNames.indexOf(monthName) + 1;
        }
        
    </script>
}
